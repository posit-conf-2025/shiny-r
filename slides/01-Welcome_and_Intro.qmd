---
title: "Welcome &<br/>Introduction to Shiny"
author: "Colin Rundel"
format: 
  revealjs:
    logo: images/shiny.png
    footer: "posit::conf 2025 - Shiny for R"
    slide-number: true
    highlight-style: a11y
    theme: [default, custom.scss]
    self-contained: true
execute:
  echo: true
title-slide-attributes:
    data-background-image: "images/Atlanta_Skyline.jpg"
    data-background-size: cover
    data-background-opacity: "0.33"
---

```{r setup}
#| include: false
library(shiny)
```

# Welcome

## Introductions

::: columns
::: {.column width="50%" .center}
![](images/colin-rundel.jpeg){width="50%"}
:::


::: {.column width="50%" .center}
![](images/barret.jpeg){width="50%"}
:::
:::


:::: {.columns}
::: {.column width='10%'}
:::
::: {.column width='40%'}
| Colin Rundel
| Duke University
:::

::: {.column width='10%'}
:::
::: {.column width='40%'}
| Barret Schloerke
| Posit, PBC
:::
::::



## Introduce yourself

We wont go around the room, but take the next couple of minutes to introduce yourself to your neighbors.

Some suggested topics:

* What is your name

* Where you are coming from

* Why you are interested in learning Shiny


```{r}
#| echo: false
countdown::countdown(3)
```




## Materials

:::: {.larger}

<br/>
**Wifi**: Posit Conf 2025 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; **Password**: conf2025

<br/>
`r bsicons::bs_icon("easel")` &nbsp; &nbsp; [pos.it/shiny-r-conf25](https://pos.it/shiny-r-conf25)

<br/>

`r bsicons::bs_icon("github")` &nbsp; &nbsp; [github.com/posit-conf-2025/shiny-r-intro](https://github.com/posit-conf-2025/shiny-r)

::::


::: aside
All of the materials for this workshop licensed under a [Creative Commons Attribution Share Alike 4.0 International license](https://github.com/posit-conf-2025/shiny-r/blob/main/LICENSE.md).
:::



## Schedule


| Time          | Activity              |
| :------------ | :-------------------- |
| 09:00 - 10:30 | Welcome & Intro       |
| 10:30 - 11:00 | *Coffee break*        |
| 11:00 - 12:30 | Reactivity            |
| 12:30 - 13:30 | *Lunch break*         |
| 13:30 - 15:00 | Dynamic UIs           |
| 15:00 - 15:30 | *Coffee break*        |
| 15:30 - 17:00 | Theming & Publishing  |



## Housekeeping

-   Gender-neutral bathrooms - Next to Chicago A (LL2)
-   Meditation/prayer room - Chicago A (LL2)
-   Mother's/lactation room - Chicago B (LL2)
-   Red lanyards = No photos
-   Code of Conduct - Please review carefully.

    <https://posit.co/code-of-conduct>. 
    
    You can report Code of Conduct violations in person, by email, or by phone.




## Asking for help (Stickies)

::: {.r-hstack}

::: {style="text-align: center;"}
::: {data-id="box2" style="border: 2px solid; width: 175px; height: 175px; margin: 25px;"}
:::
I'm working
:::

::: {style="text-align: center;"}
::: {data-id="box1" style="background: #CC4341; width: 175px; height: 175px; margin: 25px;"}
:::
I'm stuck
:::

::: {style="text-align: center;"}
::: {data-id="box3" style="background: #A3C586; width: 175px; height: 175px; margin: 25px;"}
:::
I'm done
:::

:::

::: {.r-hstack}
::: {style="text-align: center;"}
![](images/hand.png){fig-align="center" height="175px"}
<br/>I have a general question
:::
:::


## Discord

You should have received a welcome email that contained instructions for joining the conference's discord server.

This workshop has a channel under Workshops,

::: {.large style="text-align: center"}
#workshop-shiny-r
:::

This is a great place to ask questions, post resources, memes, or most anything else before, during, and after the workshop.



# Computational Environment

## RStudio Cloud

You can use the following link to join the workshops RStudio cloud space,

::: {.large .center width="50%"}
[bit.ly/conf25-shiny-r](https://bit.ly/conf25-shiny-r)
:::

Once you have joined you can then select the `shiny-r` assignment, 

![](images/cloud_assignment.png){width="80%" fig-align="center"}

which should then create a copy of all materials and launch a cloud session for you.


## Cloud session

If everything is working you should see something similar to the following,

![](images/cloud_session.png){fig-align="center" width="400px"}


## File organization

::: {.extra-padding}

* `slides/` - all slides and related materials

* `demos/` - sample code for each demo

* `exercises/` -  starter code for each exercise

* `exercises/solutions/` - sample solution code for each exercise 

* `exercises/live/` - sample solution code we generate during the workshop, 
updated at the end of each session. Update via `Git` > `Pull`.

* `data/` - example data sets used in demos and exercises

:::

# Introducing Shiny

## Shiny

::: center
![](images/shiny.png){width=25%}
:::

> Shiny is an R package that makes it easy to build interactive web apps straight from R. You can host standalone apps on a webpage or embed them in R Markdown documents or build dashboards. You can also extend your Shiny apps with CSS themes, htmlwidgets, and JavaScript actions.


## bslib

::: center
![](images/bslib.png){width=25%}
:::

> The bslib R package provides a modern UI toolkit for Shiny and R Markdown based on Bootstrap. 


## Shiny + bslib

```{r}
#| eval: false
library(shiny)
library(bslib)
```

is now the officially recommended way to build Shiny apps.

We will be using both packages throughout the workshop, I'll try to point out when we are using features specific to one or the other.

One of the easy ways to recognize what package is being used is that:

* `bslib` functions use `snake_case`, and

* `shiny` functions uses `camelCase`.



## App Anatomy

<br/>

::: columns
::: {.column width="40%" .large}
Server

::: {style="border: 2px solid; border-radius: 5px; text-align:center; font-size: 90px; height: 250px"}
`r fontawesome::fa("r-project")` + `r fontawesome::fa("server")`
:::
:::

::: {.column width="20%"}
::: {style="text-align: center; font-size: 90px; padding-top: 20px"}
<br/>â‡„
:::
:::


::: {.column width="40%" .large}
Client / Browser

::: {style="border: 2px solid; border-radius: 5px; text-align: center; height: 250px"}
::: {style="font-size: 90px"}
`r fontawesome::fa("file-code")`
:::

::: {style="font-size: 50px"}
`r fontawesome::fa("html5")` + `r fontawesome::fa("js")` + `r fontawesome::fa("css3")`
:::
:::

:::

:::


## App Components

```{r shiny-anatomy}
#| eval: false
#| echo: true
#| code-line-numbers: "|1,2|8|4|6"
library(shiny)
library(bslib)

ui = list()

server = function(input, output, session) {}

shinyApp(ui = ui, server = server)
```

Every Shiny app has two main components:

* A **UI** (user interface) which controls how the app looks

* and a **server function** which controls how the app works.



## Weather data

We need some data that we will be able to interact with for our Shiny apps today.

I've collected some historical weather data from [Meteostat](https://www.meteostat.net/) for airports around the US.

```{r}
#| include: false
options(pillar.print_min = 7, pillar.print_max = 7)
```

```{r}
#| message: false
readr::read_csv(here::here("data/weather.csv"))
```


::: aside
See [here](https://posit-conf-2025.github.io/shiny-r-intro/data/) for a full data dictionary and the [source code](https://github.com/posit-conf-2025/shiny-r-intro/blob/main/data/raw_weather.R) for collecting these data.
:::



## Demo 01 - Our first app

::: {.code-file .sourceCode .cell-code}
`r fontawesome::fa("file")` `demos/demo01.R`
:::
```{r}
#| eval: false
#| code-line-numbers: "|6-23|10-20|22|25-32|34"
#| file: "../demos/demo01.R"
```


## Your turn - Exercise 01

Open `exercises/ex01.R` in Posit cloud and execute it via the Run App button in RStudio.

Check that you are able successfully run the Shiny app and are able to interact with it by picking a new airport. 

* If everything is working try modifying the code, e.g. try adding or removing a city from `radioButtons()`.

* What happens if you add a city that is not in the `weather.csv` dataset to the radio button input?


::: {.aside}
You can use `unique(d$name)` to see the list of available airports in the data.
:::

```{r}
#| echo: false
countdown::countdown(5)
```


## Troubleshooting

A couple of quick tips:

- If the app can't find the data, make sure you have opened the workshop's RStudio project

- If you are not using Posit cloud make sure you have the latest versions of `shiny`, `bslib`, and `tidyverse` installed

- If you are stuck, ask a neighbor for help and/or raise your hand and myself or a TA will come by


# UIs

## Layouts

Shiny uses page layout functions as a way to specify the general organization of the UI of an app.

Our first app used a sidebar layout created with `page_sidebar()`. This layout consists of:

* a `title`,

* a `sidebar` (which usually holds inputs or extra information),

* and then a collection of other Shiny UI elements which form the body of the app (a plot in our case).

This sidebar layout is a good place to start for most simple apps, but there are many other layouts that can be used to create more complex and interesting apps.

## Shiny vs bslib layouts

Since `page_sidebar()` uses snake_case we can infer it is from `bslib`. If you've seen older Shiny code you may have seen `fluidPage()` + `sidebarLayout()` which come from `shiny`.

There are direct analogues of almost all Shiny page layouts in bslib, either choice is viable and will let you create a working Shiny app.

We have opted to use the bslib layouts because they are more modern and typically have a more user friendly syntax.

::: aside
When googling or using an llm you are likely to find examples using both layout styles so it is good to be familiar with both.
:::


## UI functions are HTML

One of the neat tricks of Shiny is that the interface is just a webpage, and this can be seen by the fact that UI functions are just R functions that generate HTML. 

We can run any of the following in our console and see the HTML output generated:

```{r eval=FALSE}
actionButton("id", "Click me!")
selectInput("test", "Test", choices = c("A", "B", "C"), selectize = FALSE)
img(src = "shiny.png")
```


# Input Widgets

## Shiny Widgets Gallery

::: {style="text-align: center"}
<https://shiny.posit.co/r/gallery/widgets/widget-gallery/>
:::

<iframe data-src="https://gallery.shinyapps.io/081-widgets-gallery/" width="100%" height="500px" style="border:1px solid;border-radius: 5px;" data-external="1">

</iframe>


## A brief widget tour

::: {style="text-align: center"}
[rundel.shinyapps.io/widgets/](https://rundel.shinyapps.io/widgets/)
:::


<iframe data-src="https://rundel.shinyapps.io/widgets/" width="100%" height="500px" style="border:1px solid;border-radius: 5px;" data-external="1">

</iframe>


## Your turn - Exercise 02

We've just seen a number of alternative input widgets, starting from the code in `exercises/ex02.R` try changing the `radioButton()` input to one of the following:

* `selectInput()` with `multiple = FALSE`

* `selectInput()` with `multiple = TRUE`

* `checkboxGroupInput()` 

What happens? Does the app still work as expected?

```{r}
#| echo: false
countdown::countdown(10)
```


